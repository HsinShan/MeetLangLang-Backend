stages:
  - standard-test
  - api-test
  - deploy-prod

dev-commit-test:
  stage: standard-test
  tags:
    - sdm2021group3-dind
  image: node:10.17.0
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  except:
    - web
  script:
    - cd ./
    - npm install --save-dev commitlint @commitlint/config-conventional
    - git fetch origin master
    - ./node_modules/.bin/commitlint --color --verbose --from=$(git rev-parse remotes/origin/master)

dev-codingstyle-test:
  stage: standard-test
  tags:
    - sdm2021group3-dind
  image: node:10.17.0
  only:
    - /^feature\/.*$/
    - /^bugfix\/.*$/
    - /^test\/.*$/
    - merge_requests
  except:
    - web
  script:
    - cd ./app
    - npm install
    - npm run styletest
    - cd ../
    - cd ./apitest
    - npm install
    - npm run styletest

dev-api-test:
  stage: api-test
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: "tcp://docker:2375"
    DOCKER_TLS_CERTDIR: ""
  tags:
    - sdm2021group3-dind
  image: docker/compose:alpine-1.29.1
  only:
    - merge_requests
  except:
    - web
  services:
    - docker:19.03.0-dind
  before_script:
    - cat /etc/*elease
  script:
    - docker ps
    - echo "Start to exec testings"
    - docker-compose down -v
    - docker-compose up -d
    - sleep 30
    - docker exec -i mll-apitest npm run apitest

prod-deploy:
  variables:
    COMPOSE_CMD: 'VERSION=${CI_COMMIT_SHORT_SHA} docker-compose -f docker-compose.prod.yml'
  stage: deploy-prod
  tags:
    - sdm2021group3-prodssh
  only:
    - web
  before_script:
    - pwd
    - 'eval ${COMPOSE_CMD} down -v'
    - docker images --filter=reference="mll-backend/*" -q | xargs --no-run-if-empty docker rmi
  script:
    - pwd
    - 'eval ${COMPOSE_CMD} config'
    - 'eval ${COMPOSE_CMD} build --no-cache --force-rm'
    - 'eval ${COMPOSE_CMD} up -d'
    - sleep 30
    - 'eval ${COMPOSE_CMD} logs mll-api'

